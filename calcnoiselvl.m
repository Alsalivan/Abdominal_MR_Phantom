function nval = calcnoiselvl(imPall,cmap)
% Calculate noise level
%   
%   INPUTS:
%       imPall [nx, ny, nz, 2] -> 4D phantom images generated by model2voximg.m
%       cmap   [nx, ny, nc, nz] -> coil sensitivity maps generated by gencmap.m
%
%   OUTPUTS:
%       nval   [1 x 1] -> noise level (maximum value in k-space series)
%
% -----------------------------------------------------------------------------------------
% Realistic 4D abdominal phantom for magnetic resonance imaging
% Wei-Ching Lo
% wxl317@case.edu
% Case Western Reserve University
% April 2018
% -----------------------------------------------------------------------------------------

wfcomp = size(imPall,4);
[~,~,nc,~] = size(cmap);

if wfcomp == 2
    imW = permute(repmat(squeeze(sum(imPall(:,:,:,:,1),4)),[1 1 1 nc]),[1 2 4 3]).*cmap;
elseif wfcomp == 1
    imW = permute(repmat(imPall(:,:,:,1,1),[1 1 1 nc]),[1 2 4 3]).*cmap;
end
kspW = fft1n(imW,4);
ksp2DW = fft2n(kspW,1,2);
nval = max(abs(col(ksp2DW)))*10^-4; % The maximum value in k-space series
disp(['Noise level = ' num2str(nval*100) '%']);